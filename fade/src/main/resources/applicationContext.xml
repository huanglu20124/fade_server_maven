<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">


	<!-- 开启注解扫描 -->
	<context:component-scan base-package="com.hl.service"></context:component-scan>
	<context:component-scan base-package="com.hl.test"></context:component-scan>
	<context:component-scan base-package="com.hl.dao"></context:component-scan>

	<!-- 1.将连接池 -->
	<bean name="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="jdbc:mysql://119.23.229.19:3306/fade?useUnicode=true&amp;characterEncoding=utf-8"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
	</bean>


	<!-- 2.将JDBCTemplate放入spring容器 -->
	<bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource1"></property>
	</bean>


	<!-- 3.Dao -->
	<bean name="userDao" class="com.hl.dao.impl.UserDaoImpl">
		<property name="dataSource" ref="dataSource1"></property>
		<!-- <property name="jt" ref="jdbcTemplate" ></property> -->
	</bean>

	<bean name="noteDao" class="com.hl.dao.impl.NoteDaoImpl">
		<property name="dataSource" ref="dataSource1"></property>
		<!-- <property name="jt" ref="jdbcTemplate" ></property> -->
	</bean>

	<bean name="commentDao" class="com.hl.dao.impl.CommentDaoImpl">
		<property name="dataSource" ref="dataSource1"></property>
	</bean>

	<bean name="redisDao" class="com.hl.dao.impl.RedisDaoImpl">
		<property name="redisTemplate" ref="redisTemplate"></property>
	</bean>


	<!-- 4.Service:注解形式配置 -->

	<!-- 事务核心管理器,封装了所有事务操作. 依赖于连接池 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1"></property>
	</bean>

	<!-- 开启使用注解管理aop事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- redis配置相关 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
				<value>classpath:mysql.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置JedisPoolConfig实例 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="${redis.maxIdle}"></property>
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${redis.minIdle}"></property>
		<!-- 最大连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}"></property>
	</bean>

	<!-- 配置JedisConnectionFactory  -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.hostname}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.pass}" />
		<property name="database" value="${redis.dbIndex}" />
		<property name="timeout" value="${redis.timeout}"></property>
		<property name="usePool" value="${redis.usePool}"></property>
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<!-- 缓存有效期 -->
		<property name="defaultExpiration" value="${redis.expiration}" />
	</bean>

	<!-- 配置RedisCacheConfig -->
	<bean id="redisCacheConfig" class="com.hl.util.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="redisCacheManager" />
	</bean>

</beans>